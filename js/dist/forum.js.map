{"version":3,"file":"forum.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAmC;AACW;AACa;AACN;AAEtC,SAASI,gBAAgBA,CAAA,EAAG;EACzCH,4DAAM,CAACC,wEAAY,EAAE,UAAU,EAAE,UAAUG,KAAK,EAAEC,IAAI,EAAE;IACtD,IAAMC,UAAU,GAAGD,IAAI,CAACC,UAAU,CAAC,CAAC;IACpC,IAAMC,SAAS,GAAGD,UAAU,CAACE,cAAc,CAAC,CAAC;IAC7C,IAAGD,SAAS,EAAC;MACXH,KAAK,CAACK,GAAG,CACP,QAAQ,EACRP,gFAAgB,CACd;QACES,IAAI,EAAE,kBAAkB;QACxBC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;UACbP,IAAI,CAACQ,IAAI,CAAC;YAAEC,SAAS,EAAE,CAACT,IAAI,CAACS,SAAS,CAAC;UAAE,CAAC,CAAC;QAC7C;MACF,CAAC,EACDf,kEAAc,CAACiB,KAAK,CAACX,IAAI,CAACS,SAAS,CAAC,CAAC,GAAG,kCAAkC,GAAG,gCAAgC,CAC/G,CACF,CAAC;IACH;EACF,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;;;;;;;ACxBmC;AACW;AACgB;AAE/C,SAASI,aAAaA,CAAA,EAAG;EACpClB,4DAAM,CAACiB,sFAAqB,EAAE,aAAa,EAAE,UAAUb,KAAK,EAAE;IAC1D,IAAI,IAAI,CAACgB,KAAK,CAACf,IAAI,CAACS,SAAS,CAAC,CAAC,EAAE;MAC7BV,KAAK,CAACK,GAAG,CAAC,QAAQ,EAAEY,CAAA;QAAMC,SAAS,EAAC;MAAQ,GACxCD,CAAA;QAAG,SAAM;MAAkB,CAAI,CAAC,EAC/BtB,kEAAc,CAACiB,KAAK,CAAC,qCAAqC,CACzD,CAAC,EAAC,EAAE,CAAC;IACf;EACJ,CAAC,CAAC;AACN;;;;;;;;;;;;;;;;;;;;ACbyD;AACZ;AACV;AACc;AACL;AAE5CjB,oEAAgB,CAACU,GAAG,CAAC,0BAA0B,EAAE,YAAM;EACrDe,4EAAc,CAACV,SAAS,GAAGU,0EAAc,CAAC,WAAW,CAAC;EACtDD,kFAAoB,CAACf,cAAc,GAAGe,gFAAoB,CAAC,gBAAgB,CAAC;EAC5EpB,4DAAgB,CAAC,CAAC;EAClBe,0DAAa,CAAC,CAAC;AACjB,CAAC,CAAC;;;;;;;;;;;ACXF;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://@xypp/flarum-sticky-posts/./src/forum/addStickyAction.ts","webpack://@xypp/flarum-sticky-posts/./src/forum/addStickyIcon.tsx","webpack://@xypp/flarum-sticky-posts/./src/forum/index.ts","webpack://@xypp/flarum-sticky-posts/external root \"flarum.core.compat['common/components/Button']\"","webpack://@xypp/flarum-sticky-posts/external root \"flarum.core.compat['common/extend']\"","webpack://@xypp/flarum-sticky-posts/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@xypp/flarum-sticky-posts/external root \"flarum.core.compat['common/models/Post']\"","webpack://@xypp/flarum-sticky-posts/external root \"flarum.core.compat['forum/app']\"","webpack://@xypp/flarum-sticky-posts/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@xypp/flarum-sticky-posts/external root \"flarum.core.compat['forum/utils/PostControls']\"","webpack://@xypp/flarum-sticky-posts/webpack/bootstrap","webpack://@xypp/flarum-sticky-posts/webpack/runtime/compat get default export","webpack://@xypp/flarum-sticky-posts/webpack/runtime/define property getters","webpack://@xypp/flarum-sticky-posts/webpack/runtime/hasOwnProperty shorthand","webpack://@xypp/flarum-sticky-posts/webpack/runtime/make namespace object"],"sourcesContent":["import app from 'flarum/forum/app';\r\nimport { extend } from 'flarum/common/extend';\r\nimport PostControls from 'flarum/forum/utils/PostControls';\r\nimport Button from 'flarum/common/components/Button';\r\n\r\nexport default function addStickyControl() {\r\n  extend(PostControls, 'controls', function (items, post) {\r\n    const discussion = post.discussion();\r\n    const canSticky = discussion.canStickyPosts();\r\n    if(canSticky){\r\n      items.add(\r\n        'sticky',\r\n        Button.component(\r\n          {\r\n            icon: 'fas fa-thumbtack',\r\n            onclick: () => {\r\n              post.save({ is_sticky: !post.is_sticky() });\r\n            },\r\n          },\r\n          app.translator.trans(post.is_sticky() ? 'xypp-sticky-posts.forum.unsticky' : 'xypp-sticky-posts.forum.sticky')\r\n        )\r\n      )\r\n    }\r\n  });\r\n}","import app from 'flarum/forum/app';\r\nimport { extend } from 'flarum/common/extend';\r\nimport CommentPost from 'flarum/forum/components/CommentPost';\r\n\r\nexport default function addStickyIcon() {\r\n    extend(CommentPost.prototype, 'headerItems', function (items) {\r\n        if (this.attrs.post.is_sticky()) {\r\n            items.add('sticky', <span className='sticky'>\r\n                <i class=\"fas fa-thumbtack\"></i>\r\n                {app.translator.trans('xypp-sticky-posts.forum.sticky_icon')}\r\n            </span>,80);\r\n        }\r\n    });\r\n}\r\n","import Discussion from 'flarum/common/models/Discussion';\nimport Post from 'flarum/common/models/Post';\nimport app from 'flarum/forum/app';\nimport addStickyControl from './addStickyAction';\nimport addStickyIcon from './addStickyIcon';\n\napp.initializers.add('xypp/flarum-sticky-posts', () => {\n  Post.prototype.is_sticky = Post.attribute('is_sticky');\n  Discussion.prototype.canStickyPosts = Discussion.attribute('canStickyPosts');\n  addStickyControl();\n  addStickyIcon();\n});","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/models/Discussion'];","module.exports = flarum.core.compat['common/models/Post'];","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['forum/components/CommentPost'];","module.exports = flarum.core.compat['forum/utils/PostControls'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["app","extend","PostControls","Button","addStickyControl","items","post","discussion","canSticky","canStickyPosts","add","component","icon","onclick","save","is_sticky","translator","trans","CommentPost","addStickyIcon","prototype","attrs","m","className","Discussion","Post","initializers","attribute"],"sourceRoot":""}